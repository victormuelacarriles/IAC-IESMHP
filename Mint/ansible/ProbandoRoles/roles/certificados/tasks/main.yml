- name: Asegurar que ~/.ssh existe
  file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Verificar si ya existe la clave privada de root
  stat:
    path: /root/.ssh/id_ed25519
  register: ssh_key

- name: Generar clave SSH ed25519 para root si no existe
  command: ssh-keygen -t ed25519 -C "root@{{ inventory_hostname }}" -f /root/.ssh/id_ed25519 -N ""
  when: not ssh_key.stat.exists

- name: Leer clave pública de root
  slurp:
    src: /root/.ssh/id_ed25519.pub
  register: root_pubkey

- name: Convertir clave pública a string
  set_fact:
    root_pubkey_str: "{{ root_pubkey.content | b64decode }}"

- name: Añadir claves gerenada a authorized_keys si no están
  lineinfile:
    path: /root/.ssh/authorized_keys
    line: "{{ root_pubkey_str }}"
    state: present
    create: yes
    mode: '0600'
    owner: root
    group: root
  changed_when: false

#################################################### POR HACER: comprobar kwown_hosts
- name: Comprobar si el host local está en known_hosts
  shell: ssh-keygen -F $(hostname) || ssh-keygen -F localhost
  register: known_host_check
  ignore_errors: true
  changed_when: false
#EL anterior funciona: pero falla el siguiente paso:
- name: Conectar SSH a sí mismo para añadir la clave a known_hosts
  shell: ssh -o StrictHostKeyChecking=accept-new -o BatchMode=yes localhost "exit 0" || ssh -o StrictHostKeyChecking=accept-new -o BatchMode=yes $(hostname) "exit 0"
  when: known_host_check.rc != 0 
####################################################



#####################################CLAVES EXTERNAS
#TODO: actualizar desde GITHUB
- name: Comprobar si existe el fichero con claves externas
  stat:
    path: "{{ external_keys_file }}"
  register: external_keys_stat


- name: Leer claves del archivo externo (si existe)
  slurp:
    src: "{{ external_keys_file }}"
  register: external_keys_raw
  when: external_keys_stat.stat.exists

- name: Convertir claves externas en lista
  set_fact:
    external_keys: "{{ external_keys_raw.content | b64decode | splitlines() }}"
  when: external_keys_stat.stat.exists

- name: Añadir claves externas a authorized_keys si no están
  lineinfile:
    path: /root/.ssh/authorized_keys
    line: "{{ item }}"
    state: present
    create: yes
    mode: '0600'
    owner: root
    group: root
  loop: "{{ external_keys }}"
  when: external_keys_stat.stat.exists


  ####################################################

